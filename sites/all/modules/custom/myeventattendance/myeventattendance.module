<?php
/**
 * @file
 * Logic to handle the MyEventAttendance module.
 */

/**
 * Declares what blocks are provided by MyEventAttendance.
 *
 * Implements hook_block_info().
 */
function myeventattendance_block_info() {
  $block['myeventattendance'] = array(
    'info' => t('My Event Attendance'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $block;
}

/**
 * Defines what myeventattendance is going to look like.
 *
 * Implements hook_block_view().
 */
function myeventattendance_block_view($delta = '') {
  global $user;
  $block = array();
  $node = menu_get_object();
  
  // Instantiate flags.
  $will_attend_flag = flag_get_flag('will_attend');
  $will_not_attend_flag = flag_get_flag('will_not_attend');
  
  // Create links for flagging/unflagging.
  $will_attend_link = flag_create_link('will_attend', $node->nid);
  $will_not_attend_link = flag_create_link('will_not_attend', $node->nid);
  
  // Set variables to display status of flag.
  $status = t('Error calling flag_get_flag.');
  $will_attend_status = '';
  $will_not_attend_status = '';
  
  
  if($will_attend_flag) {
    $will_attend_is_flagged = $will_attend_flag->is_flagged($node->nid, $user->uid);
  }
  
  // Check if the user will attend.
  if($will_attend_flag 
     && $will_not_attend_flag
     && $will_attend_flag->is_flagged($node->nid, $user->uid)
     && !$will_not_attend_flag->is_flagged($node->nid, $user->uid)) {
    $status = t('You will attend.');
    $will_attend_status = 'selected';
  }
  
  // Check if the user will not attend.
  else if($will_attend_flag 
          && $will_not_attend_flag
          && !$will_attend_flag->is_flagged($node->nid, $user->uid)
          && $will_not_attend_flag->is_flagged($node->nid, $user->uid)) {
    $status = t('You will not attend.');
    $will_not_attend_status = 'selected';
  }
  
  // Error; the code should never reach this point.
  else if($will_attend_flag 
          && $will_not_attend_flag
          && $will_attend_flag->is_flagged($node->nid, $user->uid)
          && $will_not_attend_flag->is_flagged($node->nid, $user->uid)) {
    $status = t('ERROR: You\'re both attending and not attending this event.');
    $will_attend_status = 'selected';
    $will_not_attend_status = 'selected';
  }
  
  // If the user does not have a flag for 'will attend' and 'will not attend', 
  // then they have not yet responded.
  else {
    $status = 'You have not yet replied.';
  }
  
  switch($delta) {
    case ('myeventattendance'):
      $vars = array(
        'willAttend' => '<span id="myeventattendance-will" class="' . $will_attend_status . '">' . $will_attend_link . '</span>',
        'willNotAttend' => '<span id="myeventattendance-wont" class="' . $will_not_attend_status . '">' . $will_not_attend_link . '</span>',
        'status' => $status,
      );
      $block['subject'] = '';
      $block['content'] = theme('myeventattendance_output', $vars);
      break;
  }
  
  return $block;
}

/**
 * Themes the block using hook_theme to specify a theme function and implements
 * it using theme_mythemefunction.
 *
 * Implements hook_theme().
 */
function myeventattendance_theme() {  
  return array(
    'myeventattendance_output' => array(
      'template' => 'output',
      'path' => drupal_get_path('module', 'myeventattendance') . '/templates',
      'type' => 'theme',
      'variables' => array(
        'willAttend' => NULL,
        'willNotAttend' => NULL,
        'status' => NULL,
      ),
    ),
  );
}

/**
 * Unflags the 'Will Not Attend' flag when the 'Will Attend' flag is flagged, 
 * or vice versa.
 *
 * Implements hook_flag_flag().
 */
function myeventattendance_flag_flag($flag, $entity_id, $account, $flagging) {
  if($flag->name == 'will_attend') {
    flag('unflag', 'will_not_attend', $entity_id);
  }
  else if($flag->name == 'will_not_attend') {
    flag('unflag', 'will_attend', $entity_id);
  }
}