<?php
  
/**
 *
 * Implementation of hook_views_api().
 */
function mymembership_views_api() {
  return array(
    'api' => 3,
    //'path' => drupal_get_path('module', 'mycommitteemembership') . '/includes/views',
    //'template path' => drupal_get_path('module', 'mycommitteemembership') . '/templates',
  );
}

/**
 * Implementation of hook_menu().
 */
function mymembership_menu() {
  $items = array();
  $items['board/committees/join'] = array(
    'title' => t('Join a Committee'),
    'description' => t('MyMembership committee request form.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mymembership_user_form'),
    'access callback' => TRUE,
  );
  $items['admin/structure/views/requests'] = array(
    'title' => t('View Pending Committee Requests'),
    'description' => t('View all the pending committee requests.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mymembership_admin_form'),
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implementation of hook_form().
 * Except it's not; fix this later.
 */
function mymembership_user_form($form, &$form_state) {

  global $user;
  $uid = $user->uid;
  
  // Initial population of the options with the default "Select..." value and
  // the allowed committees.
  $terms = array('' => '-- Select a Committee --');
  $terms += taxonomy_allowed_values(field_info_field('field_member_committee'));
  
  // Query the mymembership_requests and mymembership_user_committees tables for
  // all committees for which the user is already a member of, or has a pending
  // request to join.
  $query = 'SELECT r.cid FROM mymembership_requests r 
            WHERE r.uid = ' . $uid . ' 
            UNION 
            SELECT c.cid FROM mymembership_user_committees c 
            WHERE c.uid = ' . $uid;
  $remove_committees = db_query($query);
  
  // Remove those entries from the dropdown menu.
  foreach($remove_committees as $committee) {
    unset($terms[$committee->cid]);
  }


  $form['uid'] = array(
    '#type' => 'hidden',
    '#value' => $user->uid,
  );
  
  

  $form['cid'] = array(
    '#type' => 'select',
    '#title' => t('Committee'),
    '#description' => t('Please select a committee to join.'),
    '#default_value' => '',
    '#options' => $terms,
    '#required' => TRUE,
  );
  
  $form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t('Submit Committee Request'),
  );

  return $form;
}


/**
 * Implementation of hook_form().
 * Except it's not; fix this later.
 */
function mymembership_admin_form($form, &$form_state) {
  
  $num_requests = db_query('SELECT COUNT(*) AS count FROM mymembership_requests r')
    ->fetchObject()
    ->count;

  if($num_requests == 0) {
    $no_requests = 'There are no pending requests at this time.';
    $form['users'] = array(
      '#type' => 'hidden',
      '#value' => array(),
      '#prefix' => $no_requests,
    );
    return $form;
  }
  
  $controls = '<span id="mymembership-accept" class="mymembership-button">Accept All</span>';
  $controls .= '<span id="mymembership-reject" class="mymembership-button">Reject All</span>';
  $controls .= '<span id="mymembership-put-aside" class="mymembership-button">Put All Aside</span>';
  
  $form['users'] = array(
    '#type' => 'hidden',
    '#value' => array(),
    '#prefix' => $controls,
  );
    
  $query = 'SELECT r.uid AS uid, r.cid AS cid, u.name AS user_name, t.name AS committee_name 
            FROM mymembership_requests r, users u, taxonomy_term_data t 
            WHERE r.uid = u.uid AND t.tid = r.cid';
  $pending_requests = db_query($query);  
  
  foreach($pending_requests as $request) {
    $uid = $request->uid;
    $cid = $request->cid;
    $user_name = $request->user_name;
    $committee_name = $request->committee_name;
    
    $options = array(
      $uid . ',' . $cid . ',1' => 'Accept',
      $uid . ',' . $cid . ',0' => 'Reject',
      $uid . ',' . $cid . ',2' => 'Put Aside',
    );
    
    $form[$uid . ',' . $cid] = array(
      '#type' => 'radios',
      '#title' => t(''),
      '#description' => t('Accept, Reject, or Put Aside <b>' . $user_name . '</b>\'s request to join <b>' . $committee_name . '</b>.'),
      '#options' => $options,
      '#required' => TRUE,
      '#default_value' => $uid . ',' . $cid . ',2',
    );
    
    $form['users']['#value'][] = $uid . ',' . $cid;
  }
  
  $form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );

  return $form;
}

/**
 * Implementation of hook_form_submit() for users.
 */
function mymembership_user_form_submit($form, &$form_state) {
  db_insert('mymembership_requests')
    ->fields(array(
      'uid' => $form_state['values']['uid'],
      'cid' => $form_state['values']['cid'],
    ))->execute();
  
  drupal_set_message('Your request has been processed and is now pending approval. Thank you.'); 
}

/**
 * Implementation of hook_form_submit() for admins.
 */
function mymembership_admin_form_submit($form, &$form_state) {
  
  $DEBUG = FALSE;
  

  
  if($DEBUG) {
    $message = print_r($form_state['values'], TRUE);
    drupal_set_message('<pre>' . $message . '</pre>');
    
  }
  else {
    
    $users = $form_state['values']['users'];
    foreach($users as $user) {
      $message .= $user . '\n';
      
      $user_options = explode(',', $form_state['values'][$user]);
      $uid = $user_options[0];
      $cid = $user_options[1];
      $option = $user_options[2];
      
      // Accept the request.
      if($option == 1) {
        
        // Associate the user with the committee and remove the request.
        db_insert('mymembership_user_committees')
          ->fields(array(
            'uid' => $uid,
            'cid' => $cid,
          ))->execute();
        db_delete('mymembership_requests')
        	->condition('uid', $uid)
        	->condition('cid', $cid)
        	->execute();
      }
      
      // Reject the request.
      else if($option == 0) {
        
        // Remove the request.
        db_delete('mymembership_requests')
        	->condition('uid', $uid)
        	->condition('cid', $cid)
        	->execute();
      }
      
      // Put the request aside (do nothing).
      // { Doing nothing. }
      
    }
    
    $message = 'All requests have been processed. Thank you.';
    drupal_set_message($message);
  }
  
}